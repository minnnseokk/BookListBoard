<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bookBoard.mapper.BookBoardMapper">
    <select id="selectBookBoardList" resultType="bookBoard.dto.BookBoardDto">
        SELECT 
            b.book_id AS bookId,
            b.title,
            b.author,
            b.publisher,
            b.published_date AS publishedDate,
            b.isbn,
            b.description,
            <!-- 조인으로 받아온 북 이미지 -->
            bi.image_url AS imageUrl
        <!-- 책정보에 대한 b와 북이미지에대한 bi로 조인함 -->
        FROM 
            Books b
        LEFT JOIN
        	BookImages bi ON b.book_id=bi.book_id
        ORDER BY 
            b.book_id DESC
    </select>
    <insert id="insertBook" parameterType="bookBoard.dto.BookBoardDto" useGeneratedKeys="true" keyProperty="bookId">
        INSERT INTO books (title, isbn, author, published_date, publisher, description, created_at, updated_at)
        VALUES (#{title}, #{isbn}, #{author}, #{publishedDate}, #{publisher}, #{description}, NOW(), NOW())
    </insert>
    <!-- 한개의 이미지를 저장하는 방식 -->
    <insert id="insertBookImage" parameterType="bookBoard.dto.BookBoardImgDto">
        insert into bookImages
            (book_id, image_url, created_at)
        values 
            (#{bookId}, #{imageUrl}, now())
    </insert>
    
    <!-- 책 상세정보 select문 -->
    <select id="openBookDetail" parameterType="int" resultType="bookBoard.dto.BookBoardDto">
    	select b.book_id, b.title, b.author, b.publisher, b.published_date, b.isbn, b.description,
    		<!-- 서브쿼리문을 사용해서 imageUrl 값을 가져와보자 -->
    		(SELECT bi.image_url FROM BookImages bi WHERE bi.book_id = b.book_id LIMIT 1) AS image_url
    	from books b
    	where book_id = #{bookId}
    </select>
    
    <!-- 수정, 삭제기능 -->
    <update id="updateBook" parameterType="bookBoard.dto.BookBoardDto">
	    UPDATE books b
	    LEFT JOIN bookImages bi ON b.book_id = bi.book_id
	    SET 
	        b.title = #{title},
	        b.isbn = #{isbn},
	        b.author = #{author},
	        b.publisher = #{publisher},
	        b.published_date = #{publishedDate},
	        b.description = #{description},
	        bi.image_url = #{imageUrl}
	    WHERE b.book_id = #{bookId}
	</update>
	<delete id="deleteBook" parameterType="bookBoard.dto.BookBoardDto">
		DELETE FROM books
		WHERE book_id = #{bookId}
	</delete>
	
</mapper>